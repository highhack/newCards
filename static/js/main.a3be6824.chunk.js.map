{"version":3,"sources":["n1-main/m1-ui/header/Header.module.css","n1-main/m1-ui/components/registration/Registration.module.css","n1-main/m3-dal/auth-api.ts","n1-main/m2-bll/loginReducer.tsx","n1-main/m1-ui/common/Button/Button.tsx","n1-main/m1-ui/components/page1/Logout.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/common/Error404.tsx","n1-main/m3-dal/api.ts","n1-main/m2-bll/registerReducer.ts","n1-main/m1-ui/components/registration/Registration.tsx","n1-main/m1-ui/components/page3/Page3.tsx","n1-main/m1-ui/components/page4/Page4.tsx","n1-main/m1-ui/components/page1/Login.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","n1-main/m2-bll/reducer1.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","authAPI","email","password","rememberMe","post","delete","initialState","isLoggedIn","errorText","loadingStatus","setIsLoggedInAC","value","type","setErrorTextLoggedInAC","setAppStatusAC","Button","onBlur","disabled","onClick","primary","size","backgroundColor","label","props","mode","className","join","style","Logout","React","memo","dispatch","useDispatch","useSelector","state","login","a","response","data","error","to","Header","s","nav","item","activeClassName","active","Error404","Api","then","mail","checkPassword","addedUser","setErrorTextAC","setLoadingStatusAC","Registration","register","hideErrorText","onChange","e","setMailAC","currentTarget","setPasswordAC","setCheckPasswordAC","res","undefined","catch","SendRegisterTC","Page3","Page4","Login","useState","pass","setPass","setMail","name","changCheckboxLoggedInAC","checked","loginTC","Routes","exact","path","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","first","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3be6824.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__1urhK\",\"item\":\"Header_item__2qMHg\",\"active\":\"Header_active__3l6HR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"Registration_register__18WMF\",\"errorText\":\"Registration_errorText__xNFCr\"};","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:7542/2.0/\",\r\n    // baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post<LoginParamsType>(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/me`, {});\r\n    }\r\n}\r\n\r\n// types\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n}\r\nexport type ResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\"\r\nimport {authAPI} from \"../m3-dal/auth-api\";\r\n\r\n// types\r\ntype InitialStateType = {\r\n    email: string\r\n    password: string\r\n    isLoggedIn: boolean\r\n    rememberMe: boolean\r\n    errorText: null | string\r\n    loadingStatus: RequestStatusType\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setErrorTextLoggedInAC>\r\n    | ReturnType<typeof changCheckboxLoggedInAC>\r\n    | ReturnType<typeof setAppStatusAC>\r\n\r\nexport type RequestStatusType = 'idle' | 'loading...' | 'succeeded' | 'failed' | \"\";\r\n\r\n\r\nconst initialState = {\r\n    email: \"nya-admin@nya.nya\",\r\n    password: \"1qazxcvBG\",\r\n    isLoggedIn: false,\r\n    rememberMe: false,\r\n    errorText: null,\r\n    loadingStatus: \"idle\"\r\n} as InitialStateType\r\n\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"login/SET-IS-LOGGED-IN\":\r\n            return {...state, isLoggedIn: action.value};\r\n        case \"login/SET-ERROR-TEXT-LOGGED-IN\":\r\n            return {...state, errorText: action.errorText};\r\n        case \"login/CHANG-CHECKBOX-LOGGED-IN\":\r\n            return {...state, rememberMe: action.rememberMe};\r\n        case \"APP/SET-STATUS\":\r\n            return {...state, loadingStatus: action.loadingStatus};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// actions\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: \"login/SET-IS-LOGGED-IN\", value} as const);\r\nexport const setErrorTextLoggedInAC = (errorText: null | string) =>\r\n    ({type: \"login/SET-ERROR-TEXT-LOGGED-IN\", errorText} as const);\r\nexport const changCheckboxLoggedInAC = (rememberMe: boolean) =>\r\n    ({type: \"login/CHANG-CHECKBOX-LOGGED-IN\", rememberMe} as const);\r\nexport const setAppStatusAC = (loadingStatus: RequestStatusType) =>\r\n    ({type: 'APP/SET-STATUS', loadingStatus} as const);\r\n\r\n\r\n// thunks\r\nexport const loginTC = (email: string, password: string, rememberMe?: boolean) => async (dispatch: Dispatch<ActionsType>) => {\r\n\r\n    dispatch(setAppStatusAC(\"loading...\"));\r\n\r\n    try {\r\n        await authAPI.login(email, password, rememberMe);\r\n        dispatch(setIsLoggedInAC(true));\r\n    } catch (error) {\r\n        dispatch(setErrorTextLoggedInAC(error.response.data.error))\r\n    }\r\n    dispatch(setAppStatusAC(\"idle\"));\r\n};\r\n\r\nexport const logoutTC = (value: boolean) => async (dispatch: Dispatch<ActionsType>) => {\r\n\r\n    dispatch(setAppStatusAC(\"loading...\"));\r\n\r\n    try {\r\n        await authAPI.logout();\r\n        dispatch(setIsLoggedInAC(false));\r\n    } catch (error) {\r\n        dispatch(setErrorTextLoggedInAC(error.response.data.error));\r\n    }\r\n    dispatch(setAppStatusAC(\"idle\"));\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\nexport interface ButtonProps {\r\n    /**\r\n     * Is this the principal call to action on the page?\r\n     */\r\n    primary?: boolean;\r\n    /**\r\n     * What background color to use\r\n     */\r\n    backgroundColor?: string;\r\n    /**\r\n     * How large should the button be?\r\n     */\r\n    size?: 'small' | 'medium' | 'large';\r\n    /**\r\n     * Button contents\r\n     */\r\n    label: string;\r\n    /**\r\n     * Optional click handler\r\n     */\r\n    onClick?: () => void;\r\n\r\n    onBlur?: () => void\r\n\r\n    disabled?: boolean\r\n}\r\n\r\n/**\r\n * Primary UI component for user interaction\r\n */\r\nexport const Button: React.FC<ButtonProps> = ({ onBlur,\r\n                                                  disabled,\r\n                                                  onClick,\r\n                                                  primary = false,\r\n                                                  size = 'medium',\r\n                                                  backgroundColor,\r\n                                                  label,\r\n                                                  ...props\r\n                                              }) => {\r\n    const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n\r\n    return (\r\n        <button\r\n            disabled={disabled}\r\n            onBlur={onBlur}\r\n            type=\"button\"\r\n            onClick={onClick}\r\n            className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\r\n            style={{ backgroundColor }}\r\n            {...props}\r\n        >\r\n            {label}\r\n        </button>\r\n    );\r\n};","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {logoutTC, RequestStatusType} from \"../../../m2-bll/loginReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Button} from \"../../common/Button/Button\";\r\n\r\n\r\ntype LoginActionType = {\r\n    email: string\r\n    password: string\r\n    isLoggedIn: boolean\r\n    rememberMe: boolean\r\n    errorText: null | string\r\n    loadingStatus: RequestStatusType\r\n}\r\n\r\nexport const Logout = React.memo(() => {\r\n        const dispatch = useDispatch();\r\n        const login = useSelector<AppRootStateType, LoginActionType>(state => state.login);\r\n\r\n        const isLoggedIn = login.isLoggedIn;\r\n\r\n        let setLogout = () => {\r\n            dispatch(logoutTC(false));\r\n        }\r\n\r\n        if (!isLoggedIn) {\r\n            return <Redirect to={\"/Login\"}/>\r\n        }\r\n\r\n        return <div>\r\n            <Button\r\n                label={'Logout'}\r\n                backgroundColor={'blue'}\r\n                onClick={setLogout}\r\n            />\r\n        </div>\r\n    }\r\n)\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\nimport {Logout} from \"../components/page1/Logout\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                {<NavLink to='/Login' activeClassName={s.active}>Login</NavLink> && <Logout/>}\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/Registration' activeClassName={s.active}>Registration</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/Page3' activeClassName={s.active}>Page3</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/Page4' activeClassName={s.active}>Page4</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\n\r\nconst  Error404 = () => {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n})\r\nexport const  Api = {\r\n    postDataRegister(email: string, password: string)  {\r\n        return instance.post('auth/register', {email, password})\r\n            .then(response =>   response.data)\r\n    }\r\n}","import {Api} from \"../m3-dal/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype InitialStateType = {\r\n    mail: string\r\n    password: string\r\n    checkPassword: string\r\n    errorText: null | string\r\n    addedUser: boolean\r\n    loadingStatus: LoadingStatusType\r\n}\r\nexport type LoadingStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\n\r\nconst initialState = {\r\n    mail: '',\r\n    password: '',\r\n    checkPassword: '',\r\n    errorText: null,\r\n    addedUser: false,\r\n    loadingStatus: 'idle'\r\n} as InitialStateType\r\n\r\nexport const registerReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-MAIL':\r\n            return {...state, mail: action.mail}\r\n        case 'SET-CHECK-PASSWORD':\r\n            return {...state, checkPassword: action.checkPassword}\r\n        case 'SET-PASSWORD':\r\n            return {...state, password: action.password}\r\n        case 'SET-ERROR-TEXT':\r\n            return {...state, errorText: action.errorText}\r\n        case 'SET-ADDED-USER':\r\n            return {...state, addedUser: true}\r\n        case 'SET-LOADING-STATUS':\r\n            return {...state, loadingStatus: action.loadingStatus}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setMailAC = (mail: string) => ({type: 'SET-MAIL', mail} as const)\r\nexport const setCheckPasswordAC = (checkPassword: string) => ({type: 'SET-CHECK-PASSWORD', checkPassword} as const)\r\nexport const setPasswordAC = (password: string) => ({type: 'SET-PASSWORD', password} as const)\r\nexport const setErrorTextAC = (errorText: null | string) => ({type: 'SET-ERROR-TEXT', errorText} as const)\r\nexport const setAddedUserAC = () => ({type: 'SET-ADDED-USER'} as const)\r\nexport const setLoadingStatusAC = (loadingStatus: LoadingStatusType) => ({type: 'SET-LOADING-STATUS', loadingStatus} as const)\r\n\r\n\r\n// thunks\r\n\r\nexport const SendRegisterTC = (mail: string, password: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setLoadingStatusAC(\"loading\"))\r\n    Api.postDataRegister(mail, password)\r\n        .then((res) => {\r\n            if (res.addedUser !== undefined) {\r\n                dispatch(setAddedUserAC())\r\n            }\r\n            dispatch(setLoadingStatusAC('succeeded'))\r\n        })\r\n        .catch(error => {dispatch(setErrorTextAC(error.response.data.error))\r\n            dispatch(setLoadingStatusAC('succeeded'))\r\n            })\r\n}\r\n\r\n\r\n// types\r\nexport type setMailACType = ReturnType<typeof setMailAC>;\r\nexport type setCheckPasswordACType = ReturnType<typeof setCheckPasswordAC>;\r\nexport type setPasswordACType = ReturnType<typeof setPasswordAC>;\r\nexport type setErrorTextACType = ReturnType<typeof setErrorTextAC>;\r\nexport type setAddedUserACType = ReturnType<typeof setAddedUserAC>;\r\nexport type setLoadingStatusACType = ReturnType<typeof setLoadingStatusAC>;\r\ntype ActionsType =\r\n    | setMailACType\r\n    | setCheckPasswordACType\r\n    | setPasswordACType\r\n    | setErrorTextACType\r\n    | setAddedUserACType\r\n    | setLoadingStatusACType\r\n\r\n// type ThunkDispatch = Dispatch<ActionsType>","import React, {ChangeEvent} from \"react\";\r\nimport s from './Registration.module.css'\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {\r\n    LoadingStatusType,\r\n    SendRegisterTC,\r\n    setCheckPasswordAC,\r\n    setErrorTextAC,\r\n    setMailAC,\r\n    setPasswordAC\r\n} from \"../../../m2-bll/registerReducer\";\r\n\r\n\r\ntype RegistrationType = {\r\n    mail: string\r\n    password: string\r\n    checkPassword: string\r\n    errorText: null | string\r\n    addedUser: boolean,\r\n    loadingStatus: LoadingStatusType\r\n}\r\n\r\n\r\nconst Registration = () => {\r\n\r\n    const register = useSelector<AppRootStateType, RegistrationType>(state => state.register)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let mail = register.mail\r\n    let password = register.password\r\n    let checkPassword = register.checkPassword\r\n    let errorText = register.errorText\r\n    let addedUser = register.addedUser\r\n    let loadingStatus = register.loadingStatus\r\n\r\n    // let [mail, setMail] = useState(\"\")\r\n    // let [password, setPassword] = useState(\"\")\r\n    // let [checkPassword, setCheckPassword] = useState(\"\")\r\n    // let [errorText, setErrorText] = useState<string | null>(null)\r\n\r\n\r\n    const SendRegister = () => {\r\n        if (password !== checkPassword) {\r\n            return dispatch(setErrorTextAC('password is not correct'))\r\n        } else dispatch(SendRegisterTC(mail, password))\r\n    }\r\n\r\n    const onChangeMail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setMailAC(e.currentTarget.value))\r\n    }\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setPasswordAC(e.currentTarget.value))\r\n    }\r\n    const onChangeCheckPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setCheckPasswordAC(e.currentTarget.value))\r\n    }\r\n    const hideErrorText = () => {\r\n        dispatch(setErrorTextAC(''))\r\n    }\r\n\r\n\r\n    if (addedUser) {\r\n        return <Redirect to='/Page1'/>\r\n    } else\r\n        return (\r\n            <div onClick={hideErrorText}>\r\n                <p> Please fill in the blank fields and press sign up </p>\r\n                <form className={s.register}>\r\n                    {loadingStatus === 'loading' ? <div>Loading...</div>: ''}\r\n                    <div>Email</div>\r\n                    <input onChange={onChangeMail}/>\r\n                    <div>Password</div>\r\n                    <input onChange={onChangePassword}/>\r\n                    <div>Password</div>\r\n                    <input onChange={onChangeCheckPassword}/>\r\n                    <div className={s.errorText}>{errorText !== null\r\n                        ? <div className={s.errorText}>{errorText}</div>\r\n                        : ''}\r\n                    </div>\r\n\r\n                    <Button\r\n                        disabled={loadingStatus === 'loading'}\r\n                        label={'Sign Up'}\r\n                        onClick={SendRegister}\r\n                        onBlur={hideErrorText}\r\n                        backgroundColor={'blue'}/>\r\n                </form>\r\n            </div>\r\n\r\n        )\r\n\r\n}\r\n\r\nexport default Registration;","import React from \"react\";\r\n\r\nconst  Page3 = () => {\r\n    return (\r\n        <div>\r\n            Page3\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Page3;","import React from \"react\";\r\n\r\nconst  Page4 = () => {\r\n    return (\r\n        <div>\r\n            Page4\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Page4;","import React, {ChangeEvent, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {\r\n    changCheckboxLoggedInAC,\r\n    loginTC,\r\n    RequestStatusType,\r\n    setErrorTextLoggedInAC\r\n} from \"../../../m2-bll/loginReducer\";\r\nimport s from \"../registration/Registration.module.css\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Button} from \"../../common/Button/Button\";\r\n\r\n\r\ntype LoginActionType = {\r\n    email: string\r\n    password: string\r\n    isLoggedIn: boolean\r\n    rememberMe: boolean\r\n    errorText: null | string\r\n    loadingStatus: RequestStatusType\r\n}\r\n\r\nexport const Login = () => {\r\n\r\n    const login = useSelector<AppRootStateType, LoginActionType>(state => state.login);\r\n\r\n    let isLoggedIn = login.isLoggedIn;\r\n    let errorText = login.errorText;\r\n    let rememberMe = login.rememberMe;\r\n    let loadingStatus = login.loadingStatus\r\n\r\n    const [pass, setPass] = useState(\"1qazxcvBG\")\r\n    const [mail, setMail] = useState(\"nya-admin@nya.nya\")\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const setLogin = () => {\r\n        if (isLoggedIn) {\r\n            dispatch(setErrorTextLoggedInAC(errorText));\r\n        } else {\r\n            dispatch(loginTC(mail, pass, rememberMe));\r\n        }\r\n    };\r\n\r\n    const setErrorText = () => {\r\n        dispatch(setErrorTextLoggedInAC(\"\"));\r\n    };\r\n\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPass(e.currentTarget.value);\r\n    }\r\n    const onChangEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setMail(e.currentTarget.value);\r\n    }\r\n    const onChangCheckbox = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(changCheckboxLoggedInAC(e.currentTarget.checked))\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/Page4\"}/>\r\n    }\r\n\r\n    return <div onClick={setErrorText}>\r\n        <p> Please fill in the blank fields and press LOGIN </p>\r\n        <p>or use common test account credentials:</p>\r\n        <p>Email: <b>nya-admin@nya.nya</b></p>\r\n        <p>Password: <b>1qazxcvBG</b></p>\r\n        <form className={s.register}>\r\n            {loadingStatus === 'loading...' ? <div>{loadingStatus}</div> : ''}\r\n            <div>\r\n                Email\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={mail}\r\n                    onChange={onChangEmail}\r\n                />\r\n            </div>\r\n            <div>\r\n                Password\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={pass}\r\n                    onChange={onChangePassword}\r\n                />\r\n            </div>\r\n            <input\r\n                type={\"checkbox\"}\r\n                name=\"rememberMe\"\r\n                onChange={onChangCheckbox}\r\n            />\r\n            <div className={s.errorText}>{errorText !== null\r\n                ? <div className={errorText}>{errorText}</div>\r\n                : ''}\r\n            </div>\r\n            <Button\r\n                label={'Login'}\r\n                onClick={setLogin}\r\n                backgroundColor={'blue'}\r\n                disabled={loadingStatus === \"loading...\"}\r\n            />\r\n        </form>\r\n    </div>\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Error404 from \"../common/Error404\";\r\nimport Registration from \"../components/registration/Registration\";\r\nimport Page3 from \"../components/page3/Page3\";\r\nimport Page4 from \"../components/page4/Page4\";\r\nimport {Login} from \"../components/page1/Login\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={'/'} render={() => <div> Hello</div>}/>\r\n                <Route exact path={'/Login'} render={() => <Login/>}/>\r\n                <Route exact path={'/Logout'} render={() => <Login/>}/>\r\n                <Route exact path={'/registration'} render={() => <Registration/>}/>\r\n                <Route exact path={'/Page3'} render={() => <Page3/>}/>\r\n                <Route exact path={'/Page4'} render={() => <Page4/>}/>\r\n                {/*<Route  path={'/login'} render={() => <Login />} />*/}\r\n                {/*<Route path={ '/404' } render={ () => <Error404 /> }/>*/}\r\n                {/*<Redirect path={ '*' } to={ '/404' }/>*/}\r\n                <Route path={'*'} render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport Header from \"./header/Header\";\r\nimport Routes from \"./routes/Routes\";\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n      <BrowserRouter>\r\n    <div className=\"App\">\r\n      {/*// hashrouter //  provider*/}\r\n      <Header />\r\n      <Routes />\r\n    </div>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {Dispatch} from 'redux'\r\n\r\nconst initialState: any  = []\r\n\r\nexport const reducer1 = (state: any = initialState, action: ActionsType): any => {\r\n    switch (action.type) {\r\n        case 'TYPE':\r\n            return {...state}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const AC = (id: string) => ({type: 'TYPE', id} as const)\r\n\r\n\r\n// thunks\r\nexport const TC = () => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        // API.getTodolists()\r\n        //     .then((res: any) => {\r\n        //         dispatch(AC(res.data))\r\n        //         dispatch(AC(''))\r\n        //     })\r\n    }\r\n}\r\n\r\n// types\r\nexport type ACType = ReturnType<typeof AC>;\r\ntype ActionsType =\r\n    | ACType\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType>","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer1} from \"./reducer1\";\r\nimport {registerReducer} from \"./registerReducer\";\r\nimport {loginReducer} from \"./loginReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    first: reducer1,\r\n    register: registerReducer,\r\n    login: loginReducer\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './n1-main/m1-ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n    <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}