{"version":3,"sources":["n1-main/m1-ui/header/Header.module.css","n1-main/m1-ui/components/registration/Registration.module.css","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/common/Error404.tsx","n1-main/m1-ui/components/page1/Page1.tsx","n1-main/m1-ui/common/Button/Button.tsx","n1-main/m3-dal/api.ts","n1-main/m2-bll/registerReducer.ts","n1-main/m1-ui/components/registration/Registration.tsx","n1-main/m1-ui/components/page3/Page3.tsx","n1-main/m1-ui/components/page4/Page4.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","n1-main/m2-bll/reducer1.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","Header","className","s","nav","item","to","activeClassName","active","Error404","Page1","Button","onBlur","onClick","primary","size","backgroundColor","label","props","mode","type","join","style","instance","axios","create","baseURL","withCredentials","Api","email","password","post","then","response","data","initialState","mail","checkPassword","errorText","addedUser","setErrorTextAC","Registration","register","useSelector","state","dispatch","useDispatch","onChange","e","setMailAC","currentTarget","value","setPasswordAC","setCheckPasswordAC","res","undefined","catch","error","SendRegisterTC","Page3","Page4","Routes","exact","path","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","first","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f6cb585.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__22THU\",\"item\":\"Header_item__ssK_c\",\"active\":\"Header_active__1MFs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"Registration_register__1kewo\",\"errorText\":\"Registration_errorText__2agbz\"};","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Header.module.css';\n\nconst Header = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={s.item}>\n                <NavLink to='/Page1' activeClassName={s.active}>Page1</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/Registration' activeClassName={s.active}>Registration</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/Page3' activeClassName={s.active}>Page3</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/Page4' activeClassName={s.active}>Page4</NavLink>\n            </div>\n        </nav>\n    )\n}\n\nexport default Header","import React from \"react\";\n\nconst  Error404 = () => {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;","import React from \"react\";\n\nconst  Page1 = () => {\n    return (\n        <div>\n            Page1\n        </div>\n    );\n}\n\nexport default Page1;","import React from 'react';\nimport './Button.css';\n\nexport interface ButtonProps {\n    /**\n     * Is this the principal call to action on the page?\n     */\n    primary?: boolean;\n    /**\n     * What background color to use\n     */\n    backgroundColor?: string;\n    /**\n     * How large should the button be?\n     */\n    size?: 'small' | 'medium' | 'large';\n    /**\n     * Button contents\n     */\n    label: string;\n    /**\n     * Optional click handler\n     */\n    onClick?: () => void;\n\n    onBlur: () => void\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button: React.FC<ButtonProps> = ({ onBlur,\n                                                  onClick,\n                                                  primary = false,\n                                                  size = 'medium',\n                                                  backgroundColor,\n                                                  label,\n                                                  ...props\n                                              }) => {\n    const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n\n\n    return (\n        <button\n            onBlur={onBlur}\n            type=\"button\"\n            onClick={onClick}\n            className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n            style={{ backgroundColor }}\n            {...props}\n        >\n            {label}\n        </button>\n    );\n};","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\n    withCredentials: true,\n})\nexport const  Api = {\n    postDataRegister(email: string, password: string)  {\n        return instance.post('auth/register', {email, password})\n            .then(response =>   response.data)\n    }\n}","import {Api} from \"../m3-dal/api\";\nimport {Dispatch} from \"redux\";\n\n\ntype InitialStateType = {\n    mail: string\n    password: string\n    checkPassword: string\n    errorText: null | string\n    addedUser: boolean\n}\n\n\nconst initialState = {\n    mail: '',\n    password: '',\n    checkPassword: '',\n    errorText: null,\n    addedUser: false\n}\n\nexport const registerReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'SET-MAIL':\n            return {...state, mail: action.mail}\n        case 'SET-CHECK-PASSWORD':\n            return {...state, checkPassword: action.checkPassword}\n        case 'SET-PASSWORD':\n            return {...state, password: action.password}\n        case 'SET-ERROR-TEXT':\n            return {...state, errorText: action.errorText}\n        case 'SET-ADDED-USER':\n            return {...state, addedUser: true}\n        default:\n            return state\n\n    }\n}\n\n// actions\nexport const setMailAC = (mail: string) => ({type: 'SET-MAIL', mail} as const)\nexport const setCheckPasswordAC = (checkPassword: string) => ({type: 'SET-CHECK-PASSWORD', checkPassword} as const)\nexport const setPasswordAC = (password: string) => ({type: 'SET-PASSWORD', password} as const)\nexport const setErrorTextAC = (errorText: null | string) => ({type: 'SET-ERROR-TEXT', errorText} as const)\nexport const setAddedUserAC = () => ({type: 'SET-ADDED-USER'} as const)\n\n\n// thunks\n\nexport const SendRegisterTC = (mail: string, password: string) => (dispatch: Dispatch<ActionsType>) => {\n    Api.postDataRegister(mail, password)\n        // .then((res) => {\n        //     debugger\n        //     return res.data\n        // })\n        .then((res) => {\n            if (res.addedUser !== undefined) {\n                dispatch(setAddedUserAC())\n                // return res.data.addedUser\n            }\n        })\n        .catch(error => dispatch(setErrorTextAC(error.response.data.error)))\n}\n\n\n// types\nexport type setMailACType = ReturnType<typeof setMailAC>;\nexport type setCheckPasswordACType = ReturnType<typeof setCheckPasswordAC>;\nexport type setPasswordACType = ReturnType<typeof setPasswordAC>;\nexport type setErrorTextACType = ReturnType<typeof setErrorTextAC>;\nexport type setAddedUserACType = ReturnType<typeof setAddedUserAC>;\ntype ActionsType =\n    | setMailACType\n    | setCheckPasswordACType\n    | setPasswordACType\n    | setErrorTextACType\n    | setAddedUserACType\n\n// type ThunkDispatch = Dispatch<ActionsType>","import React, {ChangeEvent} from \"react\";\nimport s from './Registration.module.css'\nimport {Button} from \"../../common/Button/Button\";\nimport {Redirect} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../m2-bll/store\";\nimport {\n    SendRegisterTC,\n    setCheckPasswordAC,\n    setErrorTextAC,\n    setMailAC,\n    setPasswordAC\n} from \"../../../m2-bll/registerReducer\";\n\n\ntype RegistrationType =  {\n    mail: string\n    password: string\n    checkPassword: string\n    errorText: null | string\n    addedUser: boolean,\n}\n\n\nconst Registration = () => {\n\n    const register = useSelector<AppRootStateType, RegistrationType>(state => state.register)\n\n    const dispatch = useDispatch();\n\n    let mail = register.mail\n    let password = register.password\n    let checkPassword = register.checkPassword\n    let errorText = register.errorText\n    let addedUser = register.addedUser\n\n    // let [mail, setMail] = useState(\"\")\n    // let [password, setPassword] = useState(\"\")\n    // let [checkPassword, setCheckPassword] = useState(\"\")\n    // let [errorText, setErrorText] = useState<string | null>(null)\n\n\n\n        const SendRegister = () => {\n            if (password !== checkPassword) {\n                return dispatch(setErrorTextAC('password is not correct'))\n            } else\n                dispatch(SendRegisterTC(mail, password))\n        }\n\n    const onChangeMail = (e: ChangeEvent<HTMLInputElement>) => {\n        dispatch(setMailAC(e.currentTarget.value))\n    }\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\n        dispatch(setPasswordAC(e.currentTarget.value))\n    }\n    const onChangeCheckPassword = (e: ChangeEvent<HTMLInputElement>) => {\n        dispatch(setCheckPasswordAC(e.currentTarget.value))\n    }\n    const hideErrorText = () => {\n        dispatch(setErrorTextAC(null))\n    }\n\n\n\n    if (addedUser) {\n        return <Redirect  to='/Page1'/>\n    } else\n    return (\n        <div>\n            <p> Please fill in the blank fields and press sign up </p>\n            <form className={s.register}>\n                <div>Email</div>\n                <input onChange={onChangeMail}/>\n                <div>Password</div>\n                <input onChange={onChangePassword}/>\n                <div>Password</div>\n                <input onChange={onChangeCheckPassword}/>\n                <div className={s.errorText}>{errorText !== null\n                    ? <div className={errorText}>{errorText}</div>\n                    : ''}\n                </div>\n                <Button\n                    label={'Sign Up'}\n                    onClick={SendRegister}\n                    onBlur={hideErrorText}\n                    backgroundColor={'blue'}/>\n            </form>\n        </div>\n\n    )\n\n}\n\nexport default Registration;","import React from \"react\";\n\nconst  Page3 = () => {\n    return (\n        <div>\n            Page3\n        </div>\n    );\n}\n\nexport default Page3;","import React from \"react\";\n\nconst  Page4 = () => {\n    return (\n        <div>\n            Page4\n        </div>\n    );\n}\n\nexport default Page4;","import React from \"react\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport Error404 from \"../common/Error404\";\nimport Page1 from \"../components/page1/Page1\";\nimport Registration from \"../components/registration/Registration\";\nimport Page3 from \"../components/page3/Page3\";\nimport Page4 from \"../components/page4/Page4\";\n\nconst  Routes = () => {\n    return (\n        <div>\n            <Switch>\n                <Route exact path={'/'} render={() => <div> Hello</div>} />\n                <Route exact path={'/Page1'} render={() => <Page1 />} />\n                <Route exact path={'/registration'} render={() => <Registration />} />\n                <Route exact path={'/Page3'} render={() => <Page3 />} />\n                <Route exact path={'/Page4'} render={() => <Page4 />} />\n                {/*<Route  path={'/login'} render={() => <Login />} />*/}\n                <Route path={ '/404' } render={ () => <Error404 /> }/>\n                <Redirect path={ '*' } to={ '/404' }/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport {BrowserRouter} from \"react-router-dom\";\nimport Header from \"./header/Header\";\nimport Routes from \"./routes/Routes\";\n\n\nconst App = () => {\n  return (\n      <BrowserRouter>\n    <div className=\"App\">\n      {/*// hashrouter //  provider*/}\n      <Header />\n      <Routes />\n    </div>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Dispatch} from 'redux'\n\nconst initialState: any  = []\n\nexport const reducer1 = (state: any = initialState, action: ActionsType): any => {\n    switch (action.type) {\n        case 'TYPE':\n            return {...state}\n        default:\n            return state\n    }\n}\n\n// actions\nexport const AC = (id: string) => ({type: 'TYPE', id} as const)\n\n\n// thunks\nexport const TC = () => {\n    return (dispatch: ThunkDispatch) => {\n        // API.getTodolists()\n        //     .then((res: any) => {\n        //         dispatch(AC(res.data))\n        //         dispatch(AC(''))\n        //     })\n    }\n}\n\n// types\nexport type ACType = ReturnType<typeof AC>;\ntype ActionsType =\n    | ACType\n\ntype ThunkDispatch = Dispatch<ActionsType>","import {applyMiddleware, combineReducers, createStore} from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport {reducer1} from \"./reducer1\";\nimport {registerReducer} from \"./registerReducer\";\n\n\nconst rootReducer = combineReducers({\n    first: reducer1,\n    register: registerReducer\n})\n// непосредственно создаём store\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n// определить автоматически тип всего объекта состояния\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\n// @ts-ignore\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./n1-main/m2-bll/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n    <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}